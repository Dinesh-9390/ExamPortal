"""added exams, questions_mst, sections, sub_sections, exam_section, and user_exam_map tables

Revision ID: 1cbae8c060ae
Revises: 6d1cc432a965
Create Date: 2024-11-08 20:42:10.863099

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1cbae8c060ae'
down_revision = '6d1cc432a965'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('exams',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=225), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('access_code', sa.String(length=50), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('total_marks', sa.Integer(), nullable=False),
    sa.Column('created_tstmp', sa.DateTime(), nullable=True),
    sa.Column('updated_tstmp', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user_mst.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['user_mst.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sub_sections',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('section_name', sa.String(length=255), nullable=False),
    sa.Column('created_tstmp', sa.DateTime(), nullable=True),
    sa.Column('updated_tstmp', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user_mst.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['user_mst.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sections',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('section_name', sa.String(length=255), nullable=False),
    sa.Column('sub_section_id', sa.UUID(), nullable=True),
    sa.Column('created_tstmp', sa.DateTime(), nullable=True),
    sa.Column('updated_tstmp', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user_mst.id'], ),
    sa.ForeignKeyConstraint(['sub_section_id'], ['sub_sections.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['user_mst.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exam_section',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('exam_id', sa.UUID(), nullable=True),
    sa.Column('section_id', sa.UUID(), nullable=True),
    sa.Column('sub_section_id', sa.UUID(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('marks', sa.Integer(), nullable=False),
    sa.Column('created_tstmp', sa.DateTime(), nullable=True),
    sa.Column('updated_tstmp', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user_mst.id'], ),
    sa.ForeignKeyConstraint(['exam_id'], ['exams.id'], ),
    sa.ForeignKeyConstraint(['section_id'], ['sections.id'], ),
    sa.ForeignKeyConstraint(['sub_section_id'], ['sub_sections.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['user_mst.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('questions_mst',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('question_type', sa.String(length=50), nullable=False),
    sa.Column('section_id', sa.UUID(), nullable=True),
    sa.Column('sub_section_id', sa.UUID(), nullable=True),
    sa.Column('question', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('positive_weightage', sa.String(length=50), nullable=True),
    sa.Column('negative_weightage', sa.String(length=50), nullable=True),
    sa.Column('created_tstmp', sa.DateTime(), nullable=True),
    sa.Column('updated_tstmp', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user_mst.id'], ),
    sa.ForeignKeyConstraint(['section_id'], ['sections.id'], ),
    sa.ForeignKeyConstraint(['sub_section_id'], ['sub_sections.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['user_mst.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_exam_map',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('exam_id', sa.UUID(), nullable=True),
    sa.Column('current_question_id', sa.UUID(), nullable=True),
    sa.Column('start_time', sa.TIMESTAMP(), nullable=False),
    sa.Column('end_time', sa.TIMESTAMP(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_tstmp', sa.DateTime(), nullable=True),
    sa.Column('updated_tstmp', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('updated_by', sa.UUID(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user_mst.id'], ),
    sa.ForeignKeyConstraint(['current_question_id'], ['questions_mst.id'], ),
    sa.ForeignKeyConstraint(['exam_id'], ['exams.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['user_mst.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user_mst.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_exam_map')
    op.drop_table('questions_mst')
    op.drop_table('exam_section')
    op.drop_table('sections')
    op.drop_table('sub_sections')
    op.drop_table('exams')
    # ### end Alembic commands ###
